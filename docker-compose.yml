version: '3.8'

services:
  # Приложение
  app:
#    image: spring-crypto-service:0.0.1-SNAPSHOT
#    image: micronaut-crypto-service:0.0.2-SNAPSHOT
    image: ${IMAGE_ENV}
    volumes:
      - ./jfr/${TEST_NUMBER_ENV}/spring/:/tmp/${TEST_NUMBER_ENV}/spring      # ← Volume для логов
      - ./jfr/${TEST_NUMBER_ENV}/quarkus:/tmp/${TEST_NUMBER_ENV}/quarkus      # ← Volume для логов
      - ./jfr/${TEST_NUMBER_ENV}/micronaut:/tmp/${TEST_NUMBER_ENV}/micronaut
    deploy:
      resources:
        limits:
          cpus: '0.6'    # Максимум 0.5 CPU
          memory: 512M
        reservations:
          cpus: '0.6'    # Минимум 0.1 CPU
          memory: 512M
    ports:
      - "8080:8080"  # ← Приложение на порту 8080
    environment:
      - JAVA_OPTS=${JAVA_OPTS_ENV} ${JAVA_OPTS_ALL_ENV}
      - PORT=8080    # ← Порт приложения
    networks:
      - app-network

  # Envoy Proxy
  envoy:
    image: envoyproxy/envoy:v1.28-latest
    ports:
      - "8090:8090"      # ← Envoy на порту 8090 для клиентов
      - "9901:9901"      # Admin interface
    volumes:
      - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml
      - ./envoy/start_envoy.sh:/start_envoy.sh
      - ./logs:/tmp
    command: [ "sh", "/start_envoy.sh" ]    # ← Volume для логов
    environment:
      - SERVICE=spring
    depends_on:
      - app
    networks:
      - app-network
  
  lt-test:
    build:
      context: lt-test
      dockerfile: Dockerfile
    volumes:
      - ./results:/results  # Монтируем папку для результатов
    depends_on:
      - envoy
    environment:
      - TEST_DURATION=${TEST_DURATION_ENV}
      - TARGET_URL=${TARGET_URL_ENV}
      - HEALTH_URL=${HEALTH_URL_ENV}
      - REQUESTS_PER_SECOND=${REQUESTS_PER_SECOND_ENV}
      - SERVICE=${SERVICE}
      - TEST_NUMBER_ENV=${TEST_NUMBER_ENV}
    networks:
      - app-network


networks:
  app-network:
    driver: bridge